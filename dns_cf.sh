#!/bin/bash

RED='\e[31m'
GREEN='\e[32m'
YELLOW='\e[33m'
BLUE='\e[34m'
RESET='\e[0m'

check_connection() {
    local ZONE_ID="$1"
    local EMAIL="$2"
    local API_KEY="$3"

    response=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/${ZONE_ID}/dns_records" \
        -H "X-Auth-Email: ${EMAIL}" \
        -H "X-Auth-Key: ${API_KEY}" \
        -H "Content-Type: application/json")

    if echo "$response" | grep -q '"success":true'; then
        return 0
    else
        echo -e "${RED}‚ùå K·∫øt n·ªëi th·∫•t b·∫°i. Ki·ªÉm tra l·∫°i ZONE_ID, EMAIL ho·∫∑c API_KEY.${RESET}"
        return 1
    fi
}

list_record(){
    local ZONE_ID=$1
    local CLOUDFLARE_EMAIL=$2
    local CLOUDFLARE_API_KEY=$3

    echo -e "${BLUE}üìã Danh s√°ch b·∫£n ghi DNS:${RESET}"
    curl -s "https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records" \
        -H "X-Auth-Email: $CLOUDFLARE_EMAIL" \
        -H "X-Auth-Key: $CLOUDFLARE_API_KEY" \
        -H "Content-Type: application/json" | jq -r '
        .result[] |
        "üîπ ID: \(.id)\nüîπ Type: \(.type)\nüîπ Name: \(.name)\nüîπ Content: \(.content)\nüîπ Proxied: \(.proxied)\n---"
    '
}

create_record(){
    local ZONE_ID=$1
    local CLOUDFLARE_EMAIL=$2
    local CLOUDFLARE_API_KEY=$3

    echo -e "${YELLOW}‚ûï T·∫†O B·∫¢N GHI M·ªöI${RESET}"
    read -p "üî§ T√™n b·∫£n ghi (VD: abc.domain.com): " NAME
    read -p "üìõ Lo·∫°i b·∫£n ghi (A, CNAME,...): " TYPE
    read -p "üì• Gi√° tr·ªã b·∫£n ghi (IP/domain): " VALUE
    read -p "üåê C√≥ proxy qua Cloudflare? (true/false): " PROXY

    curl -s -X POST "https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records" \
        -H 'Content-Type: application/json' \
        -H "X-Auth-Email: $CLOUDFLARE_EMAIL" \
        -H "X-Auth-Key: $CLOUDFLARE_API_KEY" \
        -d "{
            \"type\": \"$TYPE\",
            \"name\": \"$NAME\",
            \"content\": \"$VALUE\",
            \"ttl\": 3600,
            \"proxied\": $PROXY
        }" | jq '.success, .errors'
}

delete_record(){
    local ZONE_ID=$1
    local CLOUDFLARE_EMAIL=$2
    local CLOUDFLARE_API_KEY=$3

    echo -e "${RED}üóëÔ∏è XO√Å B·∫¢N GHI DNS${RESET}"
    read -p "üìÑ Nh·∫≠p ID c·ªßa b·∫£n ghi DNS c·∫ßn xo√°: " DNS_RECORD_ID

    curl -s -X DELETE "https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$DNS_RECORD_ID" \
        -H "X-Auth-Email: $CLOUDFLARE_EMAIL" \
        -H "X-Auth-Key: $CLOUDFLARE_API_KEY" \
        -H 'Content-Type: application/json' | jq '.success, .errors'
}

update_record(){
    local ZONE_ID=$1
    local CLOUDFLARE_EMAIL=$2
    local CLOUDFLARE_API_KEY=$3

    echo -e "${BLUE}‚úèÔ∏è S·ª¨A B·∫¢N GHI DNS${RESET}"
    read -p "üìÑ Nh·∫≠p ID c·ªßa b·∫£n ghi DNS: " DNS_RECORD_ID
    read -p "üî§ T√™n m·ªõi: " NAME
    read -p "üìõ Lo·∫°i b·∫£n ghi (A, CNAME...): " TYPE
    read -p "üì• N·ªôi dung m·ªõi (IP/domain): " CONTENT
    read -p "üåê Proxy qua Cloudflare? (true/false): " PROXIED

    curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$DNS_RECORD_ID" \
        -H 'Content-Type: application/json' \
        -H "X-Auth-Email: $CLOUDFLARE_EMAIL" \
        -H "X-Auth-Key: $CLOUDFLARE_API_KEY" \
        -d "{
            \"type\": \"$TYPE\",
            \"name\": \"$NAME\",
            \"content\": \"$CONTENT\",
            \"ttl\": 3600,
            \"proxied\": $PROXIED
        }" | jq '.success, .errors'
}

main() {
    echo -e "${GREEN}==============================="
    echo " NH·∫¨P TH√îNG TIN K·∫æT N·ªêI CLOUDFLARE"
    echo -e "===============================${RESET}"

    read -s -p "üìß Email Cloudflare     : " CLOUDFLARE_EMAIL
    read -s -p "üîë API Key              : " CLOUDFLARE_API_KEY
    read -s -p "üåê Zone ID              : " ZONE_ID

    echo -e "${BLUE}üîÑ ƒêang ki·ªÉm tra k·∫øt n·ªëi t·ªõi Cloudflare...${RESET}"
    if ! check_connection "$ZONE_ID" "$CLOUDFLARE_EMAIL" "$CLOUDFLARE_API_KEY"; then
        echo -e "${RED}‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn Cloudflare. Ki·ªÉm tra th√¥ng tin v√† th·ª≠ l·∫°i.${RESET}"
        exit 1
    fi

    echo -e "${GREEN}‚úÖ K·∫øt n·ªëi Cloudflare th√†nh c√¥ng!${RESET}\n"

    while true; do
        echo -e "${YELLOW}==============================="
        echo "  üì° QU·∫¢N L√ù DNS RECORD CLOUDFLARE"
        echo -e "===============================${RESET}"
        echo -e "1) üìã In danh s√°ch b·∫£n ghi DNS"
        echo -e "2) ‚ûï T·∫°o b·∫£n ghi DNS m·ªõi"
        echo -e "3) üóëÔ∏è Xo√° b·∫£n ghi DNS"
        echo -e "4) ‚úèÔ∏è S·ª≠a b·∫£n ghi DNS"
        echo -e "0) üö™ Tho√°t"
        echo "---------------------------------------"
        read -p "üëâ Nh·∫≠p l·ª±a ch·ªçn (0-4): " choice

        case "$choice" in
            1) list_record "$ZONE_ID" "$CLOUDFLARE_EMAIL" "$CLOUDFLARE_API_KEY" ;;
            2) create_record "$ZONE_ID" "$CLOUDFLARE_EMAIL" "$CLOUDFLARE_API_KEY" ;;
            3) delete_record "$ZONE_ID" "$CLOUDFLARE_EMAIL" "$CLOUDFLARE_API_KEY" ;;
            4) update_record "$ZONE_ID" "$CLOUDFLARE_EMAIL" "$CLOUDFLARE_API_KEY" ;;
            0)
                echo -e "${GREEN}üëã Tho√°t ch∆∞∆°ng tr√¨nh. H·∫πn g·∫∑p l·∫°i!${RESET}"
                break
                ;;
            *)
                echo -e "${RED}‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p t·ª´ 0 ƒë·∫øn 4.${RESET}"
                ;;
        esac
        echo
    done
}
main
